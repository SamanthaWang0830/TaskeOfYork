[{"/Users/wzj/前端project/project/tasteofyork/frontend/src/index.js":"1","/Users/wzj/前端project/project/tasteofyork/frontend/src/App.js":"2","/Users/wzj/前端project/project/tasteofyork/frontend/src/contexts/user-context.jsx":"3","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/MyMealsPage.jsx":"4","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/HomePage.jsx":"5","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/FindRestaurantsPage.jsx":"6","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/StudentsPicksPage.jsx":"7","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/Login/LoginPage.jsx":"8","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/Header/Header.jsx":"9","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/createOrUpdateMeal.jsx":"10","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/myItem.jsx":"11","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/restaurantItem.jsx":"12","/Users/wzj/前端project/project/tasteofyork/frontend/src/hooks/http-hook.jsx":"13","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/pickItem.jsx":"14","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/AlertMessage.jsx":"15","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/Login/validation.jsx":"16","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/imageUpload/imageUpload.jsx":"17"},{"size":425,"mtime":1675367177988,"results":"18","hashOfConfig":"19"},{"size":1658,"mtime":1676151135836,"results":"20","hashOfConfig":"19"},{"size":1502,"mtime":1676152250956,"results":"21","hashOfConfig":"19"},{"size":4369,"mtime":1676158304626,"results":"22","hashOfConfig":"19"},{"size":1983,"mtime":1675287686294,"results":"23","hashOfConfig":"19"},{"size":2516,"mtime":1675300662417,"results":"24","hashOfConfig":"19"},{"size":3776,"mtime":1676172379704,"results":"25","hashOfConfig":"19"},{"size":5956,"mtime":1676158804215,"results":"26","hashOfConfig":"19"},{"size":3802,"mtime":1676158645080,"results":"27","hashOfConfig":"19"},{"size":3373,"mtime":1676158452386,"results":"28","hashOfConfig":"19"},{"size":1169,"mtime":1676172576793,"results":"29","hashOfConfig":"19"},{"size":1875,"mtime":1675300147712,"results":"30","hashOfConfig":"19"},{"size":1320,"mtime":1675545727418,"results":"31","hashOfConfig":"19"},{"size":1227,"mtime":1676172453976,"results":"32","hashOfConfig":"19"},{"size":617,"mtime":1676072326682,"results":"33","hashOfConfig":"19"},{"size":930,"mtime":1675282884329,"results":"34","hashOfConfig":"19"},{"size":1473,"mtime":1675902074780,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"143ou5i",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/wzj/前端project/project/tasteofyork/frontend/src/index.js",[],[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/App.js",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/contexts/user-context.jsx",["92"],[],"import { createContext, useState,useCallback } from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport const UserContext= createContext({\n    authSucceed:false,\n    setAuthSucceed:()=>{},\n    userId:null,\n    setUserId:()=>{},\n    avatar:null,\n    setAvatar:()=>{},\n    token:null,\n    setToken:()=>{},\n    login:()=>{},\n    logout:()=>{},\n    tokenExpirationDate:null,\n})\n\nexport const UserProvider=({children})=>{\n    const [userId, setUserId]= useState(null)\n    const [avatar,setAvatar]= useState(null)\n    const [token,setToken]=useState(null)\n    const [tokenExpirationDate, setTokenExpirationDate]=useState(null)\n\n    const navigate= useNavigate()\n    const login= useCallback((uid, token,avatar, expirationDate)=>{\n        setToken(token)\n        setUserId(uid)\n        setAvatar(avatar)\n        const date= expirationDate|| new Date(new Date().getTime()+ 1000*60*2)\n        setTokenExpirationDate(date)\n        localStorage.setItem(\n            'userData',\n            JSON.stringify({userId:uid, token:token,avatar:avatar, expiration:date.toISOString()})\n        )\n    },[])\n\n    const logout=useCallback(()=>{\n        setToken(null)\n        setUserId(null)\n        setAvatar(null)\n        setTokenExpirationDate(null)\n        localStorage.removeItem('userData')\n        navigate('/')\n    },[])\n\n    const value={userId,setUserId, avatar, setAvatar,token,setToken,login,logout,tokenExpirationDate}\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n}","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/MyMealsPage.jsx",["93","94"],[],"import useHttpClient from \"../hooks/http-hook\"\nimport { useEffect,useState,useContext } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport {Grid, CircularProgress,Box,Typography} from \"@mui/material\";\nimport MyItem from \"../components/myItem\";\nimport CreateOrUpdateMeal from \"../components/createOrUpdateMeal\";\nimport { UserContext } from \"../contexts/user-context\";\nconst MyMealsPage=()=>{\n    //load the whole page part \n    const [loadedMeal, setLoadedMeal]=useState()\n    const {isLoading, sendRequest}=useHttpClient()\n    const [forceRender, setForceRender] = useState(0);\n    const [updatedMealId, setUpdatedMealId]=useState()\n    const {token}=useContext(UserContext)\n    const userId= useParams().userId\n    useEffect(()=>{\n        const fetchMeals=async()=>{\n            try {\n                const responseData=await sendRequest(process.env.REACT_APP_BACKEND_URL+`/meals/user/${userId}`)\n                setLoadedMeal(responseData.meals)\n            } catch (err) {}\n        }\n        fetchMeals()\n    },[sendRequest,userId, forceRender])\n\n    // update or delete the meal part\n    const [showForm, setShowForm] = useState(false);\n    const [form, setForm]=useState({})\n    const mealId= useParams().mealId\n    //when click the update button\n    const updateHandler=async(e)=>{\n        setShowForm(true);\n        setUpdatedMealId(e.currentTarget.id)\n        try {\n            const responseData=await sendRequest(process.env.REACT_APP_BACKEND_URL+`/meals/${e.currentTarget.id}`)\n            setForm(responseData.meal)\n        } catch (err) {}\n    }\n\n    const submitHanlder =async (e) => {\n        e.preventDefault();\n        const data = new FormData(e.currentTarget);\n        const name = data.get('name');\n        const description = data.get('description');\n        try {\n          const responseData= await sendRequest(process.env.REACT_APP_BACKEND_URL+`/meals/${updatedMealId}`,\"PATCH\",JSON.stringify({\n            name,\n            description\n          }), {\"Content-Type\":\"application/json\", Authorization:\"Bearer \"+token})\n          setForceRender(prev => prev + 1)\n        } catch (err) {\n        }\n        setShowForm(false);\n    };\n\n    //when delete one item then rerender the page\n    const deleteHandler=async(e)=>{\n        try {\n            await sendRequest(process.env.REACT_APP_BACKEND_URL+`/meals/${e.currentTarget.id}`,'DELETE',null,{Authorization:\"Bearer \"+token})\n            setForceRender(prev => prev + 1)\n        } catch (err) {}\n    }\n\n    return (\n    <Box \n      sx={{ \n        flexGrow: 1,\n        marginX:{xs:2,sm:4,md:6},\n      }}\n    >\n        <Grid  \n            sx={{\n            display: 'flex',\n            justifyContent: \"space-between\",\n            backgroundColor:'error.dark',\n            paddingX:6,\n            paddingTop:1,\n            }}\n        >\n            <Grid item xs={12} sm={10}>\n            <Typography\n                component=\"h1\" \n                variant=\"h3\"\n                sx={{\n                fontFamily:\"Trebuchet MS\"\n                }}\n            >My Meals</Typography>\n            </Grid>\n        </Grid>\n\n        <Grid \n            container \n            sx={{\n            display: 'flex',\n            justifyContent: \"space-around\"\n            }}\n        >\n            {isLoading && (\n                <CircularProgress \n                    size={200}\n                    sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                    }}\n                />\n            )}\n\n            <CreateOrUpdateMeal submitHanlder={submitHanlder} setShowForm={setShowForm} showForm={showForm} form={form} isLoading={isLoading} update={true}/>\n\n            {\n                !isLoading && loadedMeal && (loadedMeal.map((pick) => (\n                    <Grid \n                        xs={12} sm={6} \n                        key={pick.id}\n                        sx={{\n                        display:'flex',\n                        justifyContent:'center'\n                        }}\n                    >\n                        <MyItem pick={pick} updateHandler={updateHandler} deleteHandler={deleteHandler} />\n                    </Grid>\n                )))\n            }\n            \n        </Grid>\n    </Box>\n    )\n}\nexport default MyMealsPage","/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/HomePage.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/FindRestaurantsPage.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/StudentsPicksPage.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/Login/LoginPage.jsx",["95","96","97"],[],"import React,{useState, useContext, useId} from \"react\";\nimport { TextField, Button, Box , Typography, CircularProgress, Snackbar, Alert} from \"@mui/material\";\nimport { validateEmail, validatePassword } from './validation';\nimport { UserContext } from \"../../contexts/user-context\";\nimport useHttpClient from '../../hooks/http-hook'\nimport ImageUpload from \"../../components/imageUpload/imageUpload\";\nimport AlertMessage from \"../../components/AlertMessage\";\n\nexport default function Login() {\n  const [isLoginMode, setIsLoginMode]=useState(true)\n  const [showErrorEmail, setShowErrorEmail]=useState(false)\n  const [showErrorPassword, setShowErrorPassword]=useState(false)\n  const [showErrorName, setShowErrorName]=useState(false)\n  const [alertOpen, setAlertOpen]=useState(false)\n  const {setAvatar, login,token}= useContext(UserContext)\n  const {isLoading, loadingError,sendRequest}= useHttpClient()\n  //image file\n  const [file, setFile] = useState()\n  \n  //swith between signup/login\n  const switchModeHandler=()=>{\n    setIsLoginMode(prev=>!prev)\n  }\n  const closeAlertHandler = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setAlertOpen(false);\n  };\n\n  let data;\n  let name;\n  let email;\n  let password;\n  const validateForm=(e)=>{\n    data = new FormData(e.currentTarget);\n    email = data.get('email');\n    password = data.get('password');\n    name=data.get('name');\n    if(!isLoginMode && name.length==0){\n      setShowErrorName('Please enter a user name')\n    }\n    const passwordValidateError = validatePassword(password)\n    if (passwordValidateError) {\n      setShowErrorPassword(passwordValidateError);\n    }\n    const emailValidateResult = validateEmail(email)\n    if (!emailValidateResult) {\n      setShowErrorEmail(\"Please enter valid email address\");\n    }\n    if(isLoginMode){\n      return (emailValidateResult && !passwordValidateError)\n    }else{\n      return (emailValidateResult && !passwordValidateError &&(!isLoginMode && name.length!==0))\n    }\n  }\n  const handleSubmit=async(e)=>{\n    e.preventDefault()\n    //validate the form\n    if(validateForm(e)){\n      let form\n      if(isLoginMode){\n        form ={\n          email: email,\n          password:password\n        }\n        try {\n          const responseData= await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/login`,\"POST\",JSON.stringify({email:form.email,password:form.password}), {\"Content-Type\":\"application/json\"})\n          login(responseData.userId, responseData.token,responseData.image)\n        } catch (err) {\n        }\n        setAlertOpen(true)\n      }else{\n        if(file){\n          try {\n            data.append('image',file)\n            const responseData= await sendRequest(process.env.REACT_APP_BACKEND_URL+'/users/signup',\"POST\",data)\n            login(responseData.userId, responseData.token,responseData.image)\n          } catch (err) {\n          }\n          setAlertOpen(true)\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n        <Box\n          sx={{my:8, display: 'flex', flexDirection: 'column', alignItems: 'center'}}\n        >\n          {\n              isLoading? (<CircularProgress size={200}/>): (\n                <>\n                <Typography component=\"h1\" variant=\"h5\">{isLoginMode?'LOG IN': 'SIGN UP'}</Typography>\n                <Box sx={{width:'50%'}}>\n                  <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                    {!isLoginMode&& (\n                      <TextField\n                        error={showErrorName}\n                        helperText={showErrorName}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                      />\n                    )}\n\n                    {!isLoginMode && <ImageUpload file={file} setFile={setFile}/>}\n\n                    <TextField\n                      error={showErrorEmail}\n                      helperText={showErrorEmail}\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n                    <TextField\n                      error={showErrorPassword}\n                      helperText={showErrorPassword}\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                    <Button \n                      variant=\"contained\" \n                      type=\"submit\" \n                      fullWidth \n                      sx={{ mt: 3, mb: 2 }}\n                    >Submit</Button>\n                  </Box>\n                  <Button variant=\"outlined\" fullWidth onClick={switchModeHandler} sx={{ mt: 3, mb: 2 }}>SWITCH TO {isLoginMode?'SIGN UP': 'LOG IN'}</Button>\n                </Box>\n                </>\n              )\n          }\n          <Snackbar open={alertOpen} autoHideDuration={3000} onClose={closeAlertHandler} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n            {\n              token? (\n                <Alert onClose={closeAlertHandler} severity=\"success\" sx={{ width: '100%' }}>\n                  Successfully Login/Signup\n                </Alert>\n              ):(\n                <Alert onClose={closeAlertHandler} severity=\"error\" sx={{ width: '100%' }}>\n                  {loadingError}\n                </Alert>\n              )\n            }\n          </Snackbar>\n          <AlertMessage open={!file&& !isLoginMode}>Please upload your avatar </AlertMessage>\n        </Box>\n    </>\n  )\n}\n","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/Header/Header.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/components/createOrUpdateMeal.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/components/myItem.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/components/restaurantItem.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/hooks/http-hook.jsx",["98"],[],"import { useState,useCallback, useRef , useEffect} from \"react\"\n\nconst useHttpClient=()=>{\n    const [isLoading, setIsLoading]=useState(false)\n    const [loadingError, setLoadingError]=useState()\n\n    const activeHttpRequests= useRef([])\n\n    const sendRequest=useCallback(async(url, method='GET', body=null, headers={})=>{\n        setIsLoading(true)\n        const httpAbortController= new AbortController()\n        activeHttpRequests.current.push(httpAbortController)\n        try {\n            const response=await fetch(url,{\n                method,\n                body,\n                headers,\n                signal:httpAbortController.signal\n            })\n            const responseData= await response.json()\n            if(!response.ok){\n                throw new Error(responseData.message)\n            }\n            setIsLoading(false)\n            return responseData\n        } catch (err) {\n            setLoadingError(err.message || 'Something went wrong, please try it again')\n            setIsLoading(false)\n            throw err\n        }\n    },[])\n\n    //a cleanup function\n    useEffect(()=>{\n        return ()=>{\n            activeHttpRequests.current.forEach(abortController=>abortController.abort())\n        }\n    },[])\n    return {isLoading,loadingError,sendRequest}\n}\nexport default useHttpClient","/Users/wzj/前端project/project/tasteofyork/frontend/src/components/pickItem.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/components/AlertMessage.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/pages/Login/validation.jsx",[],[],"/Users/wzj/前端project/project/tasteofyork/frontend/src/components/imageUpload/imageUpload.jsx",[],[],{"ruleId":"99","severity":1,"message":"100","line":44,"column":7,"nodeType":"101","endLine":44,"endColumn":9,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":29,"column":11,"nodeType":"105","messageId":"106","endLine":29,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":46,"column":17,"nodeType":"105","messageId":"106","endLine":46,"endColumn":29},{"ruleId":"103","severity":1,"message":"108","line":1,"column":37,"nodeType":"105","messageId":"106","endLine":1,"endColumn":42},{"ruleId":"103","severity":1,"message":"109","line":15,"column":10,"nodeType":"105","messageId":"106","endLine":15,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":40,"column":35,"nodeType":"112","messageId":"113","endLine":40,"endColumn":37},{"ruleId":"99","severity":1,"message":"114","line":36,"column":32,"nodeType":"105","endLine":36,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'mealId' is assigned a value but never used.","Identifier","unusedVar","'responseData' is assigned a value but never used.","'useId' is defined but never used.","'setAvatar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The ref value 'activeHttpRequests.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'activeHttpRequests.current' to a variable inside the effect, and use that variable in the cleanup function.",{"desc":"116","fix":"117"},"Update the dependencies array to be: [navigate]",{"range":"118","text":"119"},[1313,1315],"[navigate]"]